let
  -- Gospel music is often sung by a choir divided into three voices: Soprano, Alto & Tenor
  -- Let's define the triads (group of three notes) we will use in our arrangement

  take3s (x:x':x'':xs) = [x, x', x''] : (take3s (x':x'':xs))
  take3s _ = []

  generateTriads n1 n2 n3 = fmap pcat $ take3s $ join $ zipWith octavesUp [(-1), 0, 1] $ repeat [n1, n2, n3]

  -- Aliases for rythm definition: Left for rests (r) and Right for notes (n)
  r :: (Num a) => a -> Either a a
  r = Left

  n :: (Num a) => a -> Either a a
  n = Right

  mergeRythmAndNotes rythms notes = mcatMaybes $ scat $ merge rythms notes
    where
      merge [] _ = []
      merge _ [] = []
      merge ((Left rythm) : rs) ns = (stretch (rythm / 4) rest) : (merge rs ns)
      merge ((Right rythm) : rs) (n : ns) = (stretch (rythm / 4) n) : (merge rs ns)

  -- I triads
  tIs = generateTriads f a c'
  [tI_, tI2_, tI3_, tI, tI2, tI3, tI'] = tIs

  -- ii triads
  tiis = generateTriads g bb d'
  [tii_, tii2_, tii3_, tii, tii2, tii3, tii'] = tiis

  -- ii° triads
  tiids = generateTriads g bb db'
  [tiid_, tiid2_, tiid3_, tiid, tiid2, tiid3, tiid'] = tiids

  -- iii triads
  tiiis = generateTriads a c' e'
  [tiii_, tiii2_, tiii3_, tiii, tiii2, tiii3, tiii'] = tiiis

  -- iii° triads
  tiiids = generateTriads a c' eb'
  [tiiid_, tiiid2_, tiiid3_, tiiid, tiiid2, tiiid3, tiiid'] = tiiids

  -- V triads
  tVs = generateTriads c e g
  [tV_, tV2_, tV3_, tV, tV2, tV3, tV'] = tVs

  -- vii° triads
  tviids = generateTriads e g bb
  [tviid_, tviid2_, tviid3_, tviid, tviid2, tviid3, tviid'] = tviids


  -- Part A
  voicingA = phrase1 ++ phrase2 ++ phrase3 ++ phrase4 ++ phrase5
    where
      phrase1 = [tI3_, tI3_, tii2_, tI3_, tI2_, tI2_]
      phrase2 = [tI, tI, tI3_, tii3_, tiii3_, tiii3_]
      phrase3 = [tii, tV2, tiiid2_, tiiid2_, tii3_, tviid3_, tI2_, tI2_]
      phrase4 = [tii3_, tii3_ ,tI3_, tI2_, tii2_, tii2_, tI2_, tiid2_, tiiid2_]
      phrase5 = [tiid3_, tiid3_, tI3_, tI3_, tii2_, tii2_, tI2_]

  rythmA = phrase1 ++ phrase2 ++ phrase3 ++ phrase4 ++ phrase5
    where
      phrase1 = [n 1, n 1, r 4, n 1, n 1, n 1, n 1, r 6]
      phrase2 = [n 1, n 1, r 4, n 1, n 1, n (3/2), n (1/2), r 4]
      phrase3 = [n 1, n 1, n 2, n 2, r 2, n 1, n 1, n 2, n 2, r 2]
      phrase4 = [n 1, n 1, n 3, n 1, n 2, n 2, n 3, n 1, n 2]
      phrase5 = [n 1, n 1, n 3, n 1, n 2, n 2, n 4]

  partA = mergeRythmAndNotes rythmA voicingA

in asScore partA
